@{
    Layout = "_LayoutAdmin";
}

@if (User.IsInRole(UserRoleInfo.Receptionist))
{
    <div class="container-fluid px-4 py-3">
        <div class="d-flex justify-content-between flex-wrap align-items-center mb-3">
            <div>
                <h4 class="fw-bold text-primary">Good Afternoon 🌤</h4>
                <p class="text-muted mb-0">Current Time: @DateTime.Now.ToString("h:mm tt")</p>
            </div>
            <div class="d-flex align-items-center gap-2">
                <strong>Date:</strong>
                <span id="current-date" class="fw-semibold"></span>
                <input type="date" id="calendar" class="form-control" style="width: 160px;" onchange="updateCalendar()" />
            </div>
        </div>

        <div class="d-flex justify-content-center gap-2 flex-wrap mb-3">
            <button class="btn btn-primary" onclick="changeWeek(-1)">← Previous Week</button>
            <div id="weekdays" class="d-flex gap-2 flex-wrap"></div>
            <button class="btn btn-primary" onclick="changeWeek(1)">Next Week →</button>
        </div>

        <div class="d-flex justify-content-center gap-2 flex-wrap mb-4">
            <button class="btn btn-outline-primary" onclick="filterSlots('morning')">Morning</button>
            <button class="btn btn-outline-warning" onclick="filterSlots('afternoon')">Afternoon</button>
            <button class="btn btn-outline-success" onclick="filterSlots('evening')">Evening</button>
            <button class="btn btn-outline-dark" onclick="filterSlots('all')">Show All</button>
        </div>

        <div class="d-flex justify-content-center mt-2">
            <div class="card p-4 shadow-sm rounded">
                <h3 class="fw-bold mb-3 text-center">Available Slots</h3>
                <div id="slots" class="row g-3 justify-content-start"></div>
            </div>
        </div>
    </div>
}

<style>
    .btn-secondary.active {
        background-color: #0d6efd !important;
        color: white;
    }

    .card-slot {
        width: 150px;
        height: 90px;
        border-radius: 12px;
        background-color: #f9f9f9;
        box-shadow: 0 0 6px rgba(0,0,0,0.1);
        padding: 0.75rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        transition: 0.2s ease-in-out;
    }

        .card-slot:hover {
            background-color: #eef1f7;
            align-items: center;
        }

        .card-slot .time {
            font-weight: 600;
            font-size: 0.95rem;
            color: #000;
        }

        .card-slot a {
            font-size: 0.85rem;
            color: #007bff;
            text-decoration: none;
        }

            .card-slot a:hover {
                text-decoration: underline;
            }

    .alert {
        width: 100%;
    }

    .slot-section {
        margin-top: 15px;
        width: 100%;
    }

        .slot-section h6 {
            font-weight: 600;
            margin-bottom: 10px;
            padding-left: 5px;
            color: #444;
        }

    @@media (max-width: 576px) {
        .card-slot {
            width: 100%;
        }
    }
</style>

<script>
    let currentDate = new Date();

    const slots = {
        morning: ["09:00 AM", "10:00 AM", "11:00 AM", "12:00 PM"],
        afternoon: ["01:00 PM", "02:00 PM", "03:00 PM", "04:00 PM", "05:00 PM"],
        evening: ["06:00 PM", "07:00 PM", "08:00 PM"]
    };

    const dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

    function updateDate() {
        document.getElementById("current-date").textContent = currentDate.toLocaleDateString("en-US", {
            weekday: "long", year: "numeric", month: "long", day: "numeric"
        });
    }

    function updateCalendar() {
        const selectedDate = new Date(document.getElementById("calendar").value);
        if (!isNaN(selectedDate)) {
            currentDate = selectedDate;
            updateDate();
            renderWeekdayButtons();
            updateSlots("all");
        }
    }

    function changeWeek(offset) {
        currentDate.setDate(currentDate.getDate() + (offset * 7));
        document.getElementById("calendar").value = currentDate.toISOString().split("T")[0];
        updateDate();
        renderWeekdayButtons();
        updateSlots("all");
    }

    function renderWeekdayButtons() {
        const container = document.getElementById("weekdays");
        container.innerHTML = "";
        for (let i = 0; i < 7; i++) {
            const btn = document.createElement("button");
            btn.className = `btn btn-secondary ${i === currentDate.getDay() ? "active" : ""}`;
            btn.textContent = dayNames[i];
            btn.onclick = () => {
                currentDate.setDate(currentDate.getDate() - currentDate.getDay() + i);
                document.getElementById("calendar").value = currentDate.toISOString().split("T")[0];
                updateDate();
                renderWeekdayButtons();
                updateSlots("all");
            };
            container.appendChild(btn);
        }
    }

    function updateSlots(filter) {
        const container = document.getElementById("slots");
        container.innerHTML = "";

        if (currentDate.getDay() === 0) {
            container.innerHTML = `<div class="alert alert-danger text-center">⛔ Sunday is closed</div>`;
            return;
        }

        if (filter === "morning" || filter === "all") {
            renderSection("🌅 Morning Slots", slots.morning, container);
        }

        if (filter === "afternoon" || filter === "all") {
            renderSection("☀ Afternoon Slots", slots.afternoon, container);
        }

        if (filter === "evening" || filter === "all") {
            renderSection("🌙 Evening Slots", slots.evening, container);
        }
    }

    function renderSection(title, timeSlots, container) {
        const section = document.createElement("div");
        section.className = "slot-section";

        const heading = document.createElement("h6");
        heading.textContent = title;
        section.appendChild(heading);

        const row = document.createElement("div");
        row.className = "d-flex flex-wrap gap-3";

        timeSlots.forEach(time => {
            const card = document.createElement("div");
            card.className = "card-slot";

            if (time === "02:00 PM") {
                card.innerHTML = `
                    <div class="time">${time}</div>
                    <div class="text-muted" style="font-size: 0.8rem;">📝 Lunch Break</div>
                `;
            } else {
                card.innerHTML = `
                    <div class="time">${time}</div>
                    <a href="/Appointments/Create">+ Add Appointment</a>
                `;
            }

            row.appendChild(card);
        });

        section.appendChild(row);
        container.appendChild(section);
    }

    function filterSlots(category) {
        updateSlots(category);
    }

    window.onload = () => {
        document.getElementById("calendar").value = currentDate.toISOString().split("T")[0];
        updateDate();
        renderWeekdayButtons();
        updateSlots("all");
    };
</script>
