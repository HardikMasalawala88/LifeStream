@model IEnumerable<LifeStream.Models.Appointment>
@{
    ViewData["Title"] = "Appointment Management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .card-primary {
    border-color: #667eea;
    }

    .bg-gradient-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
    }

    .table {
    width: 100%;
    border-collapse: collapse;
    }

    .table thead th {
    background-color: #f8f9fa;
    color: #2c3e50;
    font-weight: 600;
    border-bottom: 2px solid #e9ecef;
    padding: 12px 15px;
    text-align: left;
    }

    .table tbody td {
    padding: 12px 15px;
    border-top: 1px solid #e9ecef;
    vertical-align: middle;
    }

    .table-hover tbody tr:hover {
    background-color: rgba(102, 126, 234, 0.05);
    }

    .img-circle {
    border-radius: 50%;
    }

    .badge {
    font-weight: 500;
    padding: 4px 8px;
    font-size: 0.75rem;
    }

    .bg-primary {
    background-color: #667eea !important;
    }

    .bg-success {
    background-color: #38c172 !important;
    }

    .bg-warning {
    background-color: #ffed4a !important;
    color: #2c3e50 !important;
    }

    .bg-danger {
    background-color: #e3342f !important;
    }

    .btn-primary {
    background-color: #667eea;
    border-color: #5a6fcf;
    }

    .btn-primary:hover {
    background-color: #5a6fcf;
    border-color: #4f63bd;
    }

    .btn-info {
    background-color: #6cb2eb;
    border-color: #5aa1e0;
    }

    .btn-info:hover {
    background-color: #5aa1e0;
    border-color: #4e90d0;
    }

    .btn-danger {
    background-color: #e3342f;
    border-color: #d32722;
    }

    .btn-danger:hover {
    background-color: #d32722;
    border-color: #c3211d;
    }

    .btn-group .btn {
    margin-right: 5px;
    }

    .btn-group .btn:last-child {
    margin-right: 0;
    }

    .text-muted {
    color: #6c757d !important;
    }

    .card-tools .btn {
    color: white;
    background-color: rgba(255, 255, 255, 0.2);
    border: none;
    }

    .card-tools .btn:hover {
    background-color: rgba(255, 255, 255, 0.3);
    }

    /* Status badge styling */
    .status-badge {
    padding: 5px 10px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
    }

    /* Modal styling */
    .modal-header.bg-danger {
    background-color: #e3342f !important;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
    .table thead {
    display: none;
    }

    .table, .table tbody, .table tr, .table td {
    display: block;
    width: 100%;
    }

    .table tr {
    margin-bottom: 15px;
    border: 1px solid #e9ecef;
    border-radius: 4px;
    }

    .table td {
    text-align: right;
    padding-left: 50%;
    position: relative;
    border-bottom: 1px solid #e9ecef;
    }

    .table td::before {
    content: attr(data-label);
    position: absolute;
    left: 15px;
    width: 45%;
    padding-right: 15px;
    font-weight: 600;
    text-align: left;
    color: #2c3e50;
    }

    .table td:last-child {
    border-bottom: 0;
    }
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="card card-primary ">
            <div class="card-header bg-gradient-primary">
                <h3 class="card-title">Appointment Management</h3>
                @if (!User.IsInRole(UserRoleInfo.Admin))
                {
                    <div class="card-tools">
                        <a asp-action="Create" class="btn btn-tool btn-sm">
                            <i class="fas fa-plus"></i> Add New Appointment
                        </a>
                    </div>
                }
            </div>

            <!-- /.card-header -->
            <div class="card-body">
                <table id="appointmentsTable" class="table table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Patient</th>
                            <th>Doctor</th>
                            <th>Appointment Date</th>
                            <th>Status</th>
                            <th>Description</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td data-label="Patient">
                                    <strong>@item.Patient.PatientName</strong><br>
                                </td>
                                <td data-label="Doctor">
                                    <strong>@item.Doctor.Name</strong><br>
                                    <small class="text-muted">@item.Doctor.Specialization</small>
                                </td>
                                <td data-label="Appointment Date">
                                    @item.AppointmentDate.ToString("MMM dd, yyyy hh:mm tt")
                                </td>
                                <td data-label="Status">
                                    @{
                                        var statusClass = "";
                                        switch (item.Status.ToLower())
                                        {
                                            case "completed":
                                                statusClass = "bg-success";
                                                break;
                                            case "pending":
                                                statusClass = "bg-warning";
                                                break;
                                            case "cancelled":
                                                statusClass = "bg-danger";
                                                break;
                                            default:
                                                statusClass = "bg-primary";
                                                break;
                                        }
                                    }
                                    <span class="status-badge @statusClass">@item.Status</span>
                                </td>
                                <td data-label="Description">
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        <div class="text-truncate" style="max-width: 200px;" title="@item.Description">
                                            @item.Description
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No description</span>
                                    }
                                </td>
                                <td data-label="Actions">
                                    <div class="btn-group">
                                        @if (!User.IsInRole(UserRoleInfo.Admin)){
                                        <a asp-action="Edit" asp-route-id="@item.AppointmentId" class="btn btn-sm btn-primary" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        }
                                        @if (User.IsInRole(UserRoleInfo.Admin))
                                        {
                                            <a asp-action="Details" asp-route-id="@item.AppointmentId" class="btn btn-sm btn-info" title="Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        }
                                        @if (User.IsInRole(UserRoleInfo.Admin))
                                        {
                                        <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal"
                                                data-bs-target="#deleteAppointmentModal" data-appointmentid="@item.AppointmentId" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>

<!-- Delete Appointment Modal -->
<div class="modal fade" id="deleteAppointmentModal" tabindex="-1" aria-labelledby="deleteAppointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteAppointmentModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this appointment? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteAppointmentForm" method="post" style="display: inline;">
                    <input type="hidden" id="appointmentId" name="AppointmentId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            // Initialize DataTable
            $('#appointmentsTable').DataTable({
                "responsive": true,
                "autoWidth": false,
                "order": [[2, "asc"]], // Default sort by appointment date
                "columnDefs": [
                    { "orderable": false, "targets": [5] },
                    { "className": "dt-center", "targets": [3, 5] }
                ],
                "language": {
                    "paginate": {
                        "previous": "<i class='fas fa-chevron-left'></i>",
                        "next": "<i class='fas fa-chevron-right'></i>"
                    }
                }
            });

            // Delete modal handler
            $('#deleteAppointmentModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var appointmentId = button.data('appointmentid');
                var modal = $(this);
                modal.find('#appointmentId').val(appointmentId);
                modal.find('#deleteAppointmentForm').attr('action', '/Appointments/Delete/' + appointmentId);
            });
        });
    </script>
}
